name: Deploy Docker image and run it

on:
  push:
    branches:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install pnpm
        run: |
          curl -L https://unpkg.com/@pnpm/self-installer | node

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run lint checks
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set date and time variables
        id: datetime
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build Docker image
        run: |
<<<<<<< HEAD
          curl -L https://unpkg.com/@pnpm/self-installer | node

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run lint checks
        run: pnpm run lint

      # - name: Set date and time variables
      #   id: datetime
      #   run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build Docker image
        run: |
          sudo mkdir -p /var/envs
          sudo cp .env.example /var/envs/taskflow_backend.env
          docker compose build
        # docker build -t taskflow/time:${{ steps.datetime.outputs.date }} .
        # docker tag taskflow/time:${{ steps.datetime.outputs.date }} ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
=======
          docker build -t taskflow/time:${{ steps.datetime.outputs.date }} .
          docker tag taskflow/time:${{ steps.datetime.outputs.date }} ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
>>>>>>> 2f85195fd382ca3fb04fcd722f56be64e0da1908

  deploy:
    needs: [lint, build]
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Set date and time variables
      #   id: datetime
      #   run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      # artifacts can be used to pass the docker image down here
      - name: Build and push Docker image
        run: |
<<<<<<< HEAD
          sudo mkdir -p /var/envs
          sudo cp ./backend/.env.example /var/envs/taskflow_backend.env
          docker compose build
          docker compose push
        # docker-compose build -t taskflow/time:${{ steps.datetime.outputs.date }} .
        # docker tag taskflow/time:${{ steps.datetime.outputs.date }} ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
        # docker push ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
=======
          docker build -t taskflow/time:${{ steps.datetime.outputs.date }} .
          docker tag taskflow/time:${{ steps.datetime.outputs.date }} ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
          docker push ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
>>>>>>> 2f85195fd382ca3fb04fcd722f56be64e0da1908

      - name: Grant Docker permissions
        run: sudo chmod 666 /var/run/docker.sock

      - name: SSH into the server and execute command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker stop taskflow
            docker rm taskflow
            docker pull ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
            docker run -d --name taskflow -p 3502:3001 ${{ secrets.DOCKER_USERNAME }}/taskflow:${{ steps.datetime.outputs.date }}
